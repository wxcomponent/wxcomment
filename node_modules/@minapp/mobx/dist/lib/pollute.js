"use strict";
/******************************************************************
MIT License http://www.opensource.org/licenses/mit-license.php
Author Mora <qiuzhongleiabc@126.com> (https://github.com/qiu8310)
*******************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var core = require("@minapp/core/system");
var mobx_1 = require("mobx");
function pollute(obj, init, destroy, options) {
    var app = getApp();
    if (options.observe !== false) {
        observe(obj, init, destroy, options.mapStoreToData);
    }
    obj.store = app.store || {};
    return obj;
}
exports.pollute = pollute;
function observe(obj, init, destroy, mapStoreToData) {
    var dispose;
    var mixin = {};
    mixin[init] = function () {
        var _this = this;
        dispose = mobx_1.autorun(function () {
            var data;
            if (typeof mapStoreToData === 'function') {
                data = mapStoreToData(obj.store);
            }
            else {
                data = mobx_1.toJS(obj.store);
                if (data.__MOBX__) {
                    delete data.constructor;
                    delete data.__MOBX__;
                }
            }
            _this.setDataSmart(data);
        });
        // @ts-ignore mobx 4 没有 onError 了，放在 autorun 配置中，但 4 之前 autorun 有个 scope 配置
        if (dispose.onError)
            dispose.onError(function (e) { return console.error(e); });
    };
    mixin[destroy] = function () {
        if (dispose)
            dispose();
    };
    core.util.mixin(obj, mixin);
}
