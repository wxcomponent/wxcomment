
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@minapp/core");
var default_1 = (function (_super) {
    __extends(default_1, _super);
    function default_1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.properties = {
            message: {
                type: String
            },
            visible: {
                type: Boolean
            },
            timeout: {
                type: Number,
                value: 5
            }
        };
        _this.data = {
            count: 0
        };
        return _this;
    }
    default_1.prototype.onReady = function () {
    };
    default_1.prototype.onPropUpdate = function (prop, val) {
        if (prop === 'visible' && val === true) {
            this.init();
        }
    };
    default_1.prototype.init = function () {
        var _this = this;
        var countDown = function () {
            if (!_this.data.visible)
                return;
            if (_this.data.count <= 0) {
                _this.close();
            }
            else {
                setTimeout(function () {
                    _this.setDataSmart({ count: _this.data.count - 1 }, countDown);
                }, 1000);
            }
        };
        this.setDataSmart({ count: this.data.timeout }, countDown);
    };
    default_1.prototype.close = function () {
        this.triggerEvent('close', {}, {});
    };
    default_1 = __decorate([
        core_1.comify()
    ], default_1);
    return default_1;
}(core_1.BaseComponent));
exports.default = default_1;

